{"ast":null,"code":"var _jsxFileName = \"/Users/arambarnett/lightningcut/OB-1-github-demo/client/src/components/PerformanceChart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceChart = ({\n  data\n}) => {\n  // Calculate chart dimensions\n  const chartHeight = 160;\n  const chartWidth = '100%';\n  const maxValue = Math.max(...data);\n  const minValue = Math.min(...data);\n\n  // Calculate the percentage change from previous to current day (last 24h)\n  const dailyChange = ((data[data.length - 1] - data[data.length - 2]) / data[data.length - 2] * 100).toFixed(2);\n  const isPositive = dailyChange >= 0;\n\n  // Calculate the percentage change for the whole week (for display in chart)\n  const weeklyChange = ((data[data.length - 1] - data[0]) / data[0] * 100).toFixed(2);\n  const isWeeklyPositive = weeklyChange >= 0;\n\n  // Generate path for the line\n  const generatePath = () => {\n    if (!data || data.length === 0) return '';\n    const range = maxValue - minValue;\n    const padding = range * 0.1; // Add 10% padding\n    const effectiveHeight = chartHeight - 20; // Account for dots size\n\n    return data.map((value, index) => {\n      // Calculate normalized Y value (inverted because SVG coords)\n      const normalizedY = effectiveHeight - (value - minValue + padding) / (range + padding * 2) * effectiveHeight;\n      // X coordinate based on index and width\n      const x = index / (data.length - 1) * 100;\n      return `${index === 0 ? 'M' : 'L'} ${x}% ${normalizedY}`;\n    }).join(' ');\n  };\n\n  // Generate days for X-axis\n  const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-bold text-white\",\n          children: [\"$\", data[data.length - 1].toLocaleString(undefined, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-2 py-1 rounded-full text-xs font-medium ${isPositive ? 'bg-green-900/30 text-green-400' : 'bg-red-900/30 text-red-400'}`,\n          children: [isPositive ? '↑ +' : '↓ ', dailyChange, \"% today\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium text-gray-400\",\n          children: \"Total Portfolio Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-400\",\n          children: [\"7-day: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: isWeeklyPositive ? 'text-green-400' : 'text-red-400',\n            children: [isWeeklyPositive ? '+' : '', weeklyChange, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      style: {\n        height: `${chartHeight}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: chartWidth,\n        height: chartHeight,\n        className: \"overflow-visible\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"areaGradient\",\n            x1: \"0%\",\n            y1: \"0%\",\n            x2: \"0%\",\n            y2: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0%\",\n              stopColor: isWeeklyPositive ? \"rgba(16, 185, 129, 0.3)\" : \"rgba(239, 68, 68, 0.3)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"100%\",\n              stopColor: isWeeklyPositive ? \"rgba(16, 185, 129, 0)\" : \"rgba(239, 68, 68, 0)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: `${generatePath()} L 100% ${chartHeight} L 0% ${chartHeight} Z`,\n          fill: \"url(#areaGradient)\",\n          className: \"transition-all duration-500 ease-in-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: generatePath(),\n          fill: \"none\",\n          stroke: isPositive ? \"#10b981\" : \"#ef4444\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          className: \"transition-all duration-500 ease-in-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), data.map((value, index) => {\n          const range = maxValue - minValue;\n          const padding = range * 0.1;\n          const effectiveHeight = chartHeight - 20;\n          const normalizedY = effectiveHeight - (value - minValue + padding) / (range + padding * 2) * effectiveHeight;\n          const x = index / (data.length - 1) * 100;\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: `${x}%`,\n            cy: normalizedY,\n            r: \"4\",\n            fill: \"#1f2937\" // Dark background color\n            ,\n            stroke: isPositive ? \"#10b981\" : \"#ef4444\",\n            strokeWidth: \"2\",\n            className: \"transition-all duration-500 ease-in-out\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        }), data.length > 1 && data.map((value, index) => {\n          // Don't create line for the first point\n          if (index === 0) return null;\n          const range = maxValue - minValue;\n          const padding = range * 0.1;\n          const effectiveHeight = chartHeight - 20;\n\n          // Previous point\n          const prevValue = data[index - 1];\n          const prevY = effectiveHeight - (prevValue - minValue + padding) / (range + padding * 2) * effectiveHeight;\n          const prevX = (index - 1) / (data.length - 1) * 100;\n\n          // Current point\n          const currY = effectiveHeight - (value - minValue + padding) / (range + padding * 2) * effectiveHeight;\n          const currX = index / (data.length - 1) * 100;\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: `${prevX}%`,\n            y1: prevY,\n            x2: `${currX}%`,\n            y2: currY,\n            stroke: isPositive ? \"#10b981\" : \"#ef4444\",\n            strokeWidth: \"2\",\n            className: \"transition-all duration-500 ease-in-out\"\n          }, `line-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mt-2\",\n      children: days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400\",\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = PerformanceChart;\nexport default PerformanceChart;\nvar _c;\n$RefreshReg$(_c, \"PerformanceChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PerformanceChart","data","chartHeight","chartWidth","maxValue","Math","max","minValue","min","dailyChange","length","toFixed","isPositive","weeklyChange","isWeeklyPositive","generatePath","range","padding","effectiveHeight","map","value","index","normalizedY","x","join","days","className","children","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","id","x1","y1","x2","y2","offset","stopColor","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","prevValue","prevY","prevX","currY","currX","day","_c","$RefreshReg$"],"sources":["/Users/arambarnett/lightningcut/OB-1-github-demo/client/src/components/PerformanceChart.js"],"sourcesContent":["import React from 'react';\n\nconst PerformanceChart = ({ data }) => {\n  // Calculate chart dimensions\n  const chartHeight = 160;\n  const chartWidth = '100%';\n  const maxValue = Math.max(...data);\n  const minValue = Math.min(...data);\n  \n  // Calculate the percentage change from previous to current day (last 24h)\n  const dailyChange = ((data[data.length - 1] - data[data.length - 2]) / data[data.length - 2] * 100).toFixed(2);\n  const isPositive = dailyChange >= 0;\n  \n  // Calculate the percentage change for the whole week (for display in chart)\n  const weeklyChange = ((data[data.length - 1] - data[0]) / data[0] * 100).toFixed(2);\n  const isWeeklyPositive = weeklyChange >= 0;\n  \n  // Generate path for the line\n  const generatePath = () => {\n    if (!data || data.length === 0) return '';\n    \n    const range = maxValue - minValue;\n    const padding = range * 0.1; // Add 10% padding\n    const effectiveHeight = chartHeight - 20; // Account for dots size\n    \n    return data.map((value, index) => {\n      // Calculate normalized Y value (inverted because SVG coords)\n      const normalizedY = effectiveHeight - ((value - minValue + padding) / (range + padding * 2)) * effectiveHeight;\n      // X coordinate based on index and width\n      const x = (index / (data.length - 1)) * 100;\n      \n      return `${index === 0 ? 'M' : 'L'} ${x}% ${normalizedY}`;\n    }).join(' ');\n  };\n\n  // Generate days for X-axis\n  const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex flex-col mb-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"text-xl font-bold text-white\">\n            ${data[data.length - 1].toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n          </div>\n          <div className={`px-2 py-1 rounded-full text-xs font-medium ${\n            isPositive ? 'bg-green-900/30 text-green-400' : 'bg-red-900/30 text-red-400'\n          }`}>\n            {isPositive ? '↑ +' : '↓ '}{dailyChange}% today\n          </div>\n        </div>\n        <div className=\"flex justify-between items-center mt-2\">\n          <div className=\"text-sm font-medium text-gray-400\">Total Portfolio Value</div>\n          <div className=\"text-sm text-gray-400\">\n            7-day: <span className={isWeeklyPositive ? 'text-green-400' : 'text-red-400'}>\n              {isWeeklyPositive ? '+' : ''}{weeklyChange}%\n            </span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"relative\" style={{ height: `${chartHeight}px` }}>\n        <svg width={chartWidth} height={chartHeight} className=\"overflow-visible\">\n          {/* Gradient for the area under the line */}\n          <defs>\n            <linearGradient id=\"areaGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={isWeeklyPositive ? \"rgba(16, 185, 129, 0.3)\" : \"rgba(239, 68, 68, 0.3)\"} />\n              <stop offset=\"100%\" stopColor={isWeeklyPositive ? \"rgba(16, 185, 129, 0)\" : \"rgba(239, 68, 68, 0)\"} />\n            </linearGradient>\n          </defs>\n          \n          {/* Area under the line */}\n          <path\n            d={`${generatePath()} L 100% ${chartHeight} L 0% ${chartHeight} Z`}\n            fill=\"url(#areaGradient)\"\n            className=\"transition-all duration-500 ease-in-out\"\n          />\n          \n          {/* Main line */}\n          <path\n            d={generatePath()}\n            fill=\"none\"\n            stroke={isPositive ? \"#10b981\" : \"#ef4444\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"transition-all duration-500 ease-in-out\"\n          />\n          \n          {/* Data points */}\n          {data.map((value, index) => {\n            const range = maxValue - minValue;\n            const padding = range * 0.1;\n            const effectiveHeight = chartHeight - 20;\n            const normalizedY = effectiveHeight - ((value - minValue + padding) / (range + padding * 2)) * effectiveHeight;\n            const x = (index / (data.length - 1)) * 100;\n            \n            return (\n              <circle\n                key={index}\n                cx={`${x}%`}\n                cy={normalizedY}\n                r=\"4\"\n                fill=\"#1f2937\" // Dark background color\n                stroke={isPositive ? \"#10b981\" : \"#ef4444\"}\n                strokeWidth=\"2\"\n                className=\"transition-all duration-500 ease-in-out\"\n              />\n            );\n          })}\n          \n          {/* Connecting lines between data points (added) */}\n          {data.length > 1 && data.map((value, index) => {\n            // Don't create line for the first point\n            if (index === 0) return null;\n            \n            const range = maxValue - minValue;\n            const padding = range * 0.1;\n            const effectiveHeight = chartHeight - 20;\n            \n            // Previous point\n            const prevValue = data[index - 1];\n            const prevY = effectiveHeight - ((prevValue - minValue + padding) / (range + padding * 2)) * effectiveHeight;\n            const prevX = ((index - 1) / (data.length - 1)) * 100;\n            \n            // Current point\n            const currY = effectiveHeight - ((value - minValue + padding) / (range + padding * 2)) * effectiveHeight;\n            const currX = (index / (data.length - 1)) * 100;\n            \n            return (\n              <line\n                key={`line-${index}`}\n                x1={`${prevX}%`}\n                y1={prevY}\n                x2={`${currX}%`}\n                y2={currY}\n                stroke={isPositive ? \"#10b981\" : \"#ef4444\"}\n                strokeWidth=\"2\"\n                className=\"transition-all duration-500 ease-in-out\"\n              />\n            );\n          })}\n        </svg>\n      </div>\n      \n      {/* X-axis labels */}\n      <div className=\"flex justify-between mt-2\">\n        {days.map((day, index) => (\n          <div key={index} className=\"text-xs text-gray-400\">{day}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PerformanceChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}