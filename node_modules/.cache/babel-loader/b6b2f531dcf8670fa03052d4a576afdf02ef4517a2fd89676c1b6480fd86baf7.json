{"ast":null,"code":"var _jsxFileName = \"/Users/arambarnett/lightningcut/OB-1-github-demo/client/src/components/NetWorthChart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetWorthChart = ({\n  data\n}) => {\n  // Calculate chart dimensions\n  const chartHeight = 160;\n  const chartWidth = '100%';\n  const maxValue = Math.max(...data);\n  const minValue = Math.min(...data);\n\n  // Generate path for the line\n  const generatePath = () => {\n    if (!data || data.length === 0) return '';\n    const range = maxValue - minValue;\n    const padding = range * 0.1; // Add 10% padding\n    const effectiveHeight = chartHeight - 20; // Account for dots size\n\n    return data.map((value, index) => {\n      // Calculate normalized Y value (inverted because SVG coords)\n      const normalizedY = effectiveHeight - (value - minValue + padding) / (range + padding * 2) * effectiveHeight;\n      // X coordinate based on index and width\n      const x = index / (data.length - 1) * 100;\n      return `${index === 0 ? 'M' : 'L'} ${x}% ${normalizedY}`;\n    }).join(' ');\n  };\n\n  // Generate days for X-axis\n  const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-medium text-gray-400\",\n        children: \"Last 7 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-bold text-white\",\n        children: [\"$\", data[data.length - 1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      style: {\n        height: `${chartHeight}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: chartWidth,\n        height: chartHeight,\n        className: \"overflow-visible\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"areaGradient\",\n            x1: \"0%\",\n            y1: \"0%\",\n            x2: \"0%\",\n            y2: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0%\",\n              stopColor: \"rgba(59, 130, 246, 0.3)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"100%\",\n              stopColor: \"rgba(59, 130, 246, 0)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: `${generatePath()} L 100% ${chartHeight} L 0% ${chartHeight} Z`,\n          fill: \"url(#areaGradient)\",\n          className: \"transition-all duration-500 ease-in-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: generatePath(),\n          fill: \"none\",\n          stroke: \"#3b82f6\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          className: \"transition-all duration-500 ease-in-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), data.map((value, index) => {\n          const range = maxValue - minValue;\n          const padding = range * 0.1;\n          const effectiveHeight = chartHeight - 20;\n          const normalizedY = effectiveHeight - (value - minValue + padding) / (range + padding * 2) * effectiveHeight;\n          const x = index / (data.length - 1) * 100;\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: `${x}%`,\n            cy: normalizedY,\n            r: \"4\",\n            fill: \"#1f2937\" // Dark background color\n            ,\n            stroke: \"#3b82f6\",\n            strokeWidth: \"2\",\n            className: \"transition-all duration-500 ease-in-out\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mt-2\",\n      children: days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400\",\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = NetWorthChart;\nexport default NetWorthChart;\nvar _c;\n$RefreshReg$(_c, \"NetWorthChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NetWorthChart","data","chartHeight","chartWidth","maxValue","Math","max","minValue","min","generatePath","length","range","padding","effectiveHeight","map","value","index","normalizedY","x","join","days","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","id","x1","y1","x2","y2","offset","stopColor","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","day","_c","$RefreshReg$"],"sources":["/Users/arambarnett/lightningcut/OB-1-github-demo/client/src/components/NetWorthChart.js"],"sourcesContent":["import React from 'react';\n\nconst NetWorthChart = ({ data }) => {\n  // Calculate chart dimensions\n  const chartHeight = 160;\n  const chartWidth = '100%';\n  const maxValue = Math.max(...data);\n  const minValue = Math.min(...data);\n  \n  // Generate path for the line\n  const generatePath = () => {\n    if (!data || data.length === 0) return '';\n    \n    const range = maxValue - minValue;\n    const padding = range * 0.1; // Add 10% padding\n    const effectiveHeight = chartHeight - 20; // Account for dots size\n    \n    return data.map((value, index) => {\n      // Calculate normalized Y value (inverted because SVG coords)\n      const normalizedY = effectiveHeight - ((value - minValue + padding) / (range + padding * 2)) * effectiveHeight;\n      // X coordinate based on index and width\n      const x = (index / (data.length - 1)) * 100;\n      \n      return `${index === 0 ? 'M' : 'L'} ${x}% ${normalizedY}`;\n    }).join(' ');\n  };\n\n  // Generate days for X-axis\n  const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-sm font-medium text-gray-400\">Last 7 days</div>\n        <div className=\"text-xl font-bold text-white\">${data[data.length - 1]}</div>\n      </div>\n      \n      <div className=\"relative\" style={{ height: `${chartHeight}px` }}>\n        <svg width={chartWidth} height={chartHeight} className=\"overflow-visible\">\n          {/* Gradient for the area under the line */}\n          <defs>\n            <linearGradient id=\"areaGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(59, 130, 246, 0.3)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(59, 130, 246, 0)\" />\n            </linearGradient>\n          </defs>\n          \n          {/* Area under the line */}\n          <path\n            d={`${generatePath()} L 100% ${chartHeight} L 0% ${chartHeight} Z`}\n            fill=\"url(#areaGradient)\"\n            className=\"transition-all duration-500 ease-in-out\"\n          />\n          \n          {/* Main line */}\n          <path\n            d={generatePath()}\n            fill=\"none\"\n            stroke=\"#3b82f6\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"transition-all duration-500 ease-in-out\"\n          />\n          \n          {/* Data points */}\n          {data.map((value, index) => {\n            const range = maxValue - minValue;\n            const padding = range * 0.1;\n            const effectiveHeight = chartHeight - 20;\n            const normalizedY = effectiveHeight - ((value - minValue + padding) / (range + padding * 2)) * effectiveHeight;\n            const x = (index / (data.length - 1)) * 100;\n            \n            return (\n              <circle\n                key={index}\n                cx={`${x}%`}\n                cy={normalizedY}\n                r=\"4\"\n                fill=\"#1f2937\" // Dark background color\n                stroke=\"#3b82f6\"\n                strokeWidth=\"2\"\n                className=\"transition-all duration-500 ease-in-out\"\n              />\n            );\n          })}\n        </svg>\n      </div>\n      \n      {/* X-axis labels */}\n      <div className=\"flex justify-between mt-2\">\n        {days.map((day, index) => (\n          <div key={index} className=\"text-xs text-gray-400\">{day}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NetWorthChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}